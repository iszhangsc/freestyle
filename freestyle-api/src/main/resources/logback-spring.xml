<?xml version="1.0" encoding="UTF-8"?>
<!-- 级别从高到低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
<!-- 以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志 -->
<!-- scan 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<!-- scanPeriod 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration>
    <contextName>logback</contextName>
    <logger name="org.springframework.web" level="INFO"/>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>

    <!-- 渲染彩色日志 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!--定义日志文件的存储地址 -->
    <property name="LOG_HOME" value="/tmp/tomcat/freestyle/logs"/>

    <!-- 控制台日志输出格式 -->
    <property name="log.pattern.console"
              value="%blue(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %highlight(%5p) %clr(18971){magenta} %boldMagenta(---){faint} %boldMagenta([%15.15t]){faint} %boldMagenta(%-40.40logger{39}){cyan} %boldMagenta(:){faint} %m%n%wEx"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder
                class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>${log.pattern.console}</pattern>
        </encoder>
    </appender>

    <springProfile name="prod">
        <!-- 按照每天生成日志文件 -->
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!--日志文件输出的文件名 -->
                <FileNamePattern>${LOG_HOME}/freestyle.%d{yyyy-MM-dd}.log</FileNamePattern>
                <!--日志文件保留天数 -->
                <MaxHistory>30</MaxHistory>
            </rollingPolicy>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}:%L - %msg%n</pattern>
            </encoder>
            <!--日志文件最大的大小 -->
            <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                <MaxFileSize>10MB</MaxFileSize>
            </triggeringPolicy>
        </appender>

        <!-- 生成html格式日志开始 -->
        <appender name="HTML" class="ch.qos.logback.core.FileAppender">
            <!-- 过滤器，只记录WARN级别的日志 -->
            <!-- <filter class="ch.qos.logback.classic.filter.LevelFilter"> <level>info</level>
                <onMatch>ACCEPT</onMatch> <onMismatch>DENY</onMismatch> </filter> -->

            <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
                <layout class="ch.qos.logback.classic.html.HTMLLayout">
                    <pattern>%p%d%msg%M%F{32}%L</pattern>
                </layout>
            </encoder>
            <file>${LOG_HOME}/error-log.html</file>
        </appender>
        <!-- 生成html格式日志结束 -->

        <!-- 每天生成一个html格式的日志开始 -->
        <appender name="FILE_HTML" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!--日志文件输出的文件名 -->
                <FileNamePattern>${LOG_HOME}/freestyle.%d{yyyy-MM-dd}.html</FileNamePattern>
                <!--HTML日志文件保留天数 -->
                <MaxHistory>10</MaxHistory>
            </rollingPolicy>
            <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
                <layout class="ch.qos.logback.classic.html.HTMLLayout">
                    <pattern>%p%d%msg%M%F{32}%L</pattern>
                </layout>
            </encoder>
            <!--日志文件最大的大小 -->
            <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                <MaxFileSize>10MB</MaxFileSize>
            </triggeringPolicy>
        </appender>
        <!-- 每天生成一个html格式的日志结束 -->
    </springProfile>

	<!--开发+测试环境-->
    <springProfile name="dev,test">
        <logger name="org.springframework.web" level="INFO"/>
        <logger name="com.freestyle" level="DEBUG"/>
        <logger name="org.apache.ibatis.logging.stdout.StdOutImpl" level="DEBUG"/>
    </springProfile>

	<springProfile name="prod">
		<root level="INFO">
			<!--<appender-ref ref="STDOUT"/>-->
			<appender-ref ref="FILE"/>
			<appender-ref ref="HTML"/>
			<appender-ref ref="FILE_HTML"/>
		</root>
		<logger name="com.freestyle" level="INFO"/>
		<logger name="org.springframework.web" level="ERROR"/>
	</springProfile>

    <!--<logger name="com.freestyle" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
    </logger>-->


    <!-- 日志输出级别 -->
    <!--<root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="HTML"/>
        <appender-ref ref="FILE_HTML"/>
    </root>-->

</configuration>